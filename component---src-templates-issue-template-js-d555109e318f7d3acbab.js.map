{"version":3,"sources":["webpack:///./src/templates/issueTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","markdownRemark","data","frontmatter","html","timeToRead","a","createElement","title","className","date","dangerouslySetInnerHTML","__html","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","children","_856328897","Fragment","header","paddingTop","Date","getFullYear","href","node"],"mappings":"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","file":"component---src-templates-issue-template-js-d555109e318f7d3acbab.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nexport default function Template({\n  data // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html, timeToRead } = markdownRemark\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className='blog-post-container'>\n        <div className='blog-post'>\n          <h1>{frontmatter.title}</h1>\n          <h2>{frontmatter.date}</h2>\n          <p>{timeToRead} min read</p>\n          <div\n            className='blog-post-content'\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($fileAbsolutePath: String!) {\n    markdownRemark(fileAbsolutePath: { eq: $fileAbsolutePath }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n      timeToRead\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        }\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: ''\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem'\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem'\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to='/'\n          style={{\n            color: 'white',\n            textDecoration: 'none'\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ''\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: '0 auto',\n          maxWidth: 960,\n          padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {' '}\n          <a href='https://www.gatsbyjs.org'>Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n"],"sourceRoot":""}